//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/GuitarController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GuitarController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GuitarController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GuitarController"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""e1a86c66-c710-490e-9ef8-02e132bffbad"",
            ""actions"": [
                {
                    ""name"": ""green"",
                    ""type"": ""Button"",
                    ""id"": ""a9bff5fe-a730-4d06-8f57-7642afc4fee0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""red"",
                    ""type"": ""Button"",
                    ""id"": ""4371a11e-edfc-493c-bc29-73426e30bfb3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""yellow"",
                    ""type"": ""Button"",
                    ""id"": ""ee859cf8-736f-48cd-bd2c-de9e7984bcba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""blue"",
                    ""type"": ""Button"",
                    ""id"": ""1dff9e58-e516-4cfa-8a15-c1d9c802b534"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""orange"",
                    ""type"": ""Button"",
                    ""id"": ""404b4a55-dbd9-4531-b0ed-6d159f8137df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""start"",
                    ""type"": ""Button"",
                    ""id"": ""e7a55e0e-930b-416c-aedf-b5bd7520a43d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""starpower"",
                    ""type"": ""Button"",
                    ""id"": ""a4f066f1-9924-4f3a-a43d-ba0bc4c3fa5f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""strumdown"",
                    ""type"": ""Button"",
                    ""id"": ""a27cc89e-341b-43e3-91a1-39cab028ce51"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""strumup"",
                    ""type"": ""Button"",
                    ""id"": ""350b9e3b-40be-4571-b216-b92e8ddb28a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a22626b6-aab6-42a3-af89-71ac3d132c26"",
                    ""path"": ""<XInputController>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Guitar Xbox Controller"",
                    ""action"": ""start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad48ab2a-17b9-440d-a9ac-770eb1edc378"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Guitar Xbox Controller"",
                    ""action"": ""starpower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3244d60-f987-4f52-8456-f7d427e500e7"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""green"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""818b8ef1-9455-4020-923c-a80186939d3b"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""red"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e230023-b32d-4435-a60b-5eb25c1c54c4"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""yellow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3010440-905e-4485-9793-61a4057e943f"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""blue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bde3a0f-9944-4a79-81c5-40b71763b666"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""orange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5188b944-362a-4202-9146-1c1b59b255be"",
                    ""path"": ""<XInputController>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""strumdown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""adb3baad-b753-4c28-bdd1-3df917e79d18"",
                    ""path"": ""<XInputController>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""strumup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Guitar Xbox Controller"",
            ""bindingGroup"": ""Guitar Xbox Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_green = m_Player.FindAction("green", throwIfNotFound: true);
        m_Player_red = m_Player.FindAction("red", throwIfNotFound: true);
        m_Player_yellow = m_Player.FindAction("yellow", throwIfNotFound: true);
        m_Player_blue = m_Player.FindAction("blue", throwIfNotFound: true);
        m_Player_orange = m_Player.FindAction("orange", throwIfNotFound: true);
        m_Player_start = m_Player.FindAction("start", throwIfNotFound: true);
        m_Player_starpower = m_Player.FindAction("starpower", throwIfNotFound: true);
        m_Player_strumdown = m_Player.FindAction("strumdown", throwIfNotFound: true);
        m_Player_strumup = m_Player.FindAction("strumup", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_green;
    private readonly InputAction m_Player_red;
    private readonly InputAction m_Player_yellow;
    private readonly InputAction m_Player_blue;
    private readonly InputAction m_Player_orange;
    private readonly InputAction m_Player_start;
    private readonly InputAction m_Player_starpower;
    private readonly InputAction m_Player_strumdown;
    private readonly InputAction m_Player_strumup;
    public struct PlayerActions
    {
        private @GuitarController m_Wrapper;
        public PlayerActions(@GuitarController wrapper) { m_Wrapper = wrapper; }
        public InputAction @green => m_Wrapper.m_Player_green;
        public InputAction @red => m_Wrapper.m_Player_red;
        public InputAction @yellow => m_Wrapper.m_Player_yellow;
        public InputAction @blue => m_Wrapper.m_Player_blue;
        public InputAction @orange => m_Wrapper.m_Player_orange;
        public InputAction @start => m_Wrapper.m_Player_start;
        public InputAction @starpower => m_Wrapper.m_Player_starpower;
        public InputAction @strumdown => m_Wrapper.m_Player_strumdown;
        public InputAction @strumup => m_Wrapper.m_Player_strumup;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @green.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnGreen;
                @green.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnGreen;
                @green.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnGreen;
                @red.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRed;
                @red.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRed;
                @red.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRed;
                @yellow.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnYellow;
                @yellow.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnYellow;
                @yellow.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnYellow;
                @blue.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBlue;
                @blue.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBlue;
                @blue.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBlue;
                @orange.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOrange;
                @orange.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOrange;
                @orange.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOrange;
                @start.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStart;
                @start.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStart;
                @start.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStart;
                @starpower.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStarpower;
                @starpower.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStarpower;
                @starpower.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStarpower;
                @strumdown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStrumdown;
                @strumdown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStrumdown;
                @strumdown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStrumdown;
                @strumup.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStrumup;
                @strumup.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStrumup;
                @strumup.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStrumup;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @green.started += instance.OnGreen;
                @green.performed += instance.OnGreen;
                @green.canceled += instance.OnGreen;
                @red.started += instance.OnRed;
                @red.performed += instance.OnRed;
                @red.canceled += instance.OnRed;
                @yellow.started += instance.OnYellow;
                @yellow.performed += instance.OnYellow;
                @yellow.canceled += instance.OnYellow;
                @blue.started += instance.OnBlue;
                @blue.performed += instance.OnBlue;
                @blue.canceled += instance.OnBlue;
                @orange.started += instance.OnOrange;
                @orange.performed += instance.OnOrange;
                @orange.canceled += instance.OnOrange;
                @start.started += instance.OnStart;
                @start.performed += instance.OnStart;
                @start.canceled += instance.OnStart;
                @starpower.started += instance.OnStarpower;
                @starpower.performed += instance.OnStarpower;
                @starpower.canceled += instance.OnStarpower;
                @strumdown.started += instance.OnStrumdown;
                @strumdown.performed += instance.OnStrumdown;
                @strumdown.canceled += instance.OnStrumdown;
                @strumup.started += instance.OnStrumup;
                @strumup.performed += instance.OnStrumup;
                @strumup.canceled += instance.OnStrumup;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_GuitarXboxControllerSchemeIndex = -1;
    public InputControlScheme GuitarXboxControllerScheme
    {
        get
        {
            if (m_GuitarXboxControllerSchemeIndex == -1) m_GuitarXboxControllerSchemeIndex = asset.FindControlSchemeIndex("Guitar Xbox Controller");
            return asset.controlSchemes[m_GuitarXboxControllerSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnGreen(InputAction.CallbackContext context);
        void OnRed(InputAction.CallbackContext context);
        void OnYellow(InputAction.CallbackContext context);
        void OnBlue(InputAction.CallbackContext context);
        void OnOrange(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnStarpower(InputAction.CallbackContext context);
        void OnStrumdown(InputAction.CallbackContext context);
        void OnStrumup(InputAction.CallbackContext context);
    }
}
